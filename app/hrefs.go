// Code generated by goagen v1.1.0-dirty, command line:
// $ goagen
// --design=github.com/tri125/gwentapi/design
// --out=$(GOPATH)\src\github.com\tri125\gwentapi
// --version=v1.1.0-dirty
//
// API "gwentapi": Application Resource Href Factories
//
// The content of this file is auto-generated, DO NOT MODIFY

package app

import (
	"fmt"
	"strings"
)

// CardHref returns the resource href.
func CardHref(cardID interface{}) string {
	paramcardID := strings.TrimLeftFunc(fmt.Sprintf("%v", cardID), func(r rune) bool { return r == '/' })
	return fmt.Sprintf("/v0/cards/%v", paramcardID)
}

// FactionHref returns the resource href.
func FactionHref(factionID interface{}) string {
	paramfactionID := strings.TrimLeftFunc(fmt.Sprintf("%v", factionID), func(r rune) bool { return r == '/' })
	return fmt.Sprintf("/v0/factions/%v", paramfactionID)
}

// GlyphHref returns the resource href.
func GlyphHref(glyphID interface{}) string {
	paramglyphID := strings.TrimLeftFunc(fmt.Sprintf("%v", glyphID), func(r rune) bool { return r == '/' })
	return fmt.Sprintf("/v0/glyphs/%v", paramglyphID)
}

// PatchHref returns the resource href.
func PatchHref(patchID interface{}) string {
	parampatchID := strings.TrimLeftFunc(fmt.Sprintf("%v", patchID), func(r rune) bool { return r == '/' })
	return fmt.Sprintf("/v0/patches/%v", parampatchID)
}

// PhonebookHref returns the resource href.
func PhonebookHref() string {
	return "/v0"
}

// RarityHref returns the resource href.
func RarityHref(rarityID interface{}) string {
	paramrarityID := strings.TrimLeftFunc(fmt.Sprintf("%v", rarityID), func(r rune) bool { return r == '/' })
	return fmt.Sprintf("/v0/rarities/%v", paramrarityID)
}

// TypeHref returns the resource href.
func TypeHref(typeID interface{}) string {
	paramtypeID := strings.TrimLeftFunc(fmt.Sprintf("%v", typeID), func(r rune) bool { return r == '/' })
	return fmt.Sprintf("/v0/types/%v", paramtypeID)
}
